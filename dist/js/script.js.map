{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nwindow.onload = function () {\n\n    console.log('Ready!');\n\n    var Dropdown = function Dropdown() {\n\n        var dropdownData;\n        var dropdownContainerName;\n        var dropdownsSection;\n        var currentValue;\n\n        function initializeDropdown(container, data) {\n            dropdownData = data;\n            dropdownContainerName = container;\n            dropdownsSection = document.getElementById(container);\n            console.log(dropdownData);\n            console.log(dropdownContainerName);\n            console.log(dropdownsSection);\n\n            createDropdown();\n        }\n\n        [\"click\", \"scroll\"].forEach(function (e) {\n            document.addEventListener(e, refreshInputs);\n        });\n\n        window.addEventListener(\"resize\", function () {\n            refreshInputs();\n        });\n\n        function refreshInputs() {\n            closeAllDropdowns();\n            setCurrentValues();\n        }\n\n        // Closing all dropdowns reseting focus on inputs (when resizing, scrolling and clicking outside of dropdowns)\n        function closeAllDropdowns() {\n            var dropdownList = dropdownsSection.querySelector(\".dropdownList\");\n            if (dropdownList) {\n                dropdownList.parentNode.removeChild(dropdownList);\n            }\n        }\n\n        // Setting current values into inputs (when resizing, scrolling and clicking outside of dropdowns)\n        function setCurrentValues() {\n            var label;\n            if (currentValue) {\n                dropdownData.forEach(function (obj) {\n                    if (obj[\"id\"] == currentValue) {\n                        label = obj[\"label\"];\n                    }\n                });\n                dropdownsSection.querySelector(\".dropdownInput\").value = label;\n            } else {\n                dropdownsSection.querySelector(\".dropdownInput\").value = \"\";\n            }\n        }\n\n        function createDropdown() {\n\n            var wrapper = document.createElement(\"div\");\n            wrapper.className = \"wrapper\";\n\n            var dropdown = document.createElement(\"div\");\n            dropdown.className = \"dropdown\";\n\n            var dropdownInput = document.createElement(\"input\");\n            dropdownInput.type = \"text\";\n            dropdownInput.name = \"city\";\n            dropdownInput.className = \"dropdownInput\";\n            dropdownInput.placeholder = \"Enter something\";\n            dropdownInput.autocomplete = \"off\";\n            dropdownInput.required = true;\n\n            var button = document.createElement(\"button\");\n            button.className = \"btn dropdownButton\";\n            button.innerHTML = \"&#9660;\";\n\n            dropdownsSection.appendChild(wrapper);\n            wrapper.appendChild(dropdown);\n            dropdown.appendChild(dropdownInput);\n            dropdown.appendChild(button);\n\n            console.log(\"Initialized dropdown in section: \" + dropdownContainerName);\n            initializeEventListeners();\n        }\n\n        function initializeEventListeners() {\n            dropdownsSection.querySelector(\".dropdown\").addEventListener(\"click\", function (e) {\n                e.stopPropagation();\n                openDropdownList();\n            });\n            dropdownsSection.querySelector(\".dropdownInput\").addEventListener(\"input\", function (e) {\n                clearDropdownListItems();\n                var sortedArray = getMatchesFromArray(e.target.value);\n                generateDropdownListItems(sortedArray);\n            });\n        }\n\n        // Getting array of matched objects from objects aray\n        function getMatchesFromArray(string) {\n            var dropdownDataSorted = [];\n            if (string) {\n                dropdownData.forEach(function (item) {\n                    if (string && (item.label.startsWith(string) || item.label.startsWith(string.charAt(0).toUpperCase() + string.slice(1)))) {\n                        dropdownDataSorted.push(item);\n                    }\n                });\n                if (dropdownDataSorted.length <= 0) {\n                    dropdownDataSorted = [{ \"label\": \"No matching elements\", \"id\": \"error\" }];\n                }\n            } else {\n                dropdownDataSorted = dropdownData;\n            }\n            return dropdownDataSorted;\n        }\n\n        function openDropdownList() {\n            if (!dropdownsSection.querySelector(\".dropdownList\")) {\n                var dropdownList = document.createElement(\"ul\");\n                dropdownList.className = \"dropdownList\";\n                dropdownsSection.querySelector(\".dropdown\").appendChild(dropdownList);\n                dropdownsSection.getElementsByClassName(\"dropdownInput\")[0].focus();\n                dropdownsSection.getElementsByClassName(\"dropdownInput\")[0].value = \"\";\n                generateDropdownListItems(dropdownData);\n            }\n        }\n\n        function generateDropdownListItems(array) {\n            array.forEach(function (listItem) {\n                var dropdownListItem = document.createElement(\"li\");\n                dropdownListItem.className = \"dropdownListItem\";\n                dropdownListItem.setAttribute(\"data-id\", listItem[\"id\"]);\n                dropdownListItem.innerHTML = listItem[\"label\"];\n                dropdownListItem.addEventListener(\"click\", function (e) {\n                    e.stopPropagation();\n                    if (e.target.dataset.id !== \"error\") {\n                        setInputValue(parseInt(e.target.dataset.id), array);\n                        currentValue = e.target.dataset.id;\n                        console.log(\"Current value: \", currentValue);\n                        closeAllDropdowns();\n                    }\n                });\n                dropdownsSection.querySelector(\".dropdownList\").appendChild(dropdownListItem);\n            });\n            var dropdownListHeight = dropdownsSection.querySelector(\".dropdownList\").offsetHeight;\n            var toBottom = getDropdownBottomOffset(dropdownListHeight);\n            console.log(dropdownListHeight);\n            console.log(toBottom);\n            if (toBottom < dropdownListHeight) {\n                dropdownsSection.querySelector(\".dropdownList\").className += \" top\";\n            }\n        }\n\n        // Setting label into input field by id of element\n        function setInputValue(id, array) {\n            var label;\n            array.forEach(function (obj) {\n                if (obj[\"id\"] == id && obj[\"id\"] !== \"error\") {\n                    label = obj[\"label\"];\n                }\n            });\n            dropdownsSection.querySelector(\".dropdownInput\").value = label;\n        }\n\n        // Clearing dropdown list (before generate new list items with input matches)\n        function clearDropdownListItems() {\n            dropdownsSection.querySelector(\".dropdownList\").innerHTML = \"\";\n        }\n\n        // Getting bottom offset for dropdown list\n        function getDropdownBottomOffset() {\n            var windowInnerHeight = window.innerHeight;\n            var bottomOffset = dropdownsSection.querySelector(\".dropdown\").getBoundingClientRect().bottom;\n            return windowInnerHeight - bottomOffset;\n        }\n\n        return {\n            init: initializeDropdown\n        };\n    };\n\n    var DROPDOWN_DATA_1 = [{ \"label\": \"Bawcomville\", \"id\": 0 }, { \"label\": \"Rushford\", \"id\": 1 }, { \"label\": \"Bayview Village\", \"id\": 2 }, { \"label\": \"Oak Grove\", \"id\": 3 }, { \"label\": \"Smackover\", \"id\": 4 }, { \"label\": \"Natchez\", \"id\": 5 }, { \"label\": \"Baton Rouge\", \"id\": 6 }, { \"label\": \"Fremont\", \"id\": 7 }, { \"label\": \"Arcadia\", \"id\": 8 }, { \"label\": \"Cobban\", \"id\": 9 }, { \"label\": \"Drywood\", \"id\": 10 }, { \"label\": \"Oakville\", \"id\": 11 }];\n\n    var DROPDOWN_DATA_2 = [{ \"label\": \"Blue\", \"id\": 0 }, { \"label\": \"Green\", \"id\": 1 }, { \"label\": \"Red\", \"id\": 2 }, { \"label\": \"Yellow\", \"id\": 3 }, { \"label\": \"Gray\", \"id\": 4 }, { \"label\": \"Orange\", \"id\": 5 }, { \"label\": \"Black\", \"id\": 6 }, { \"label\": \"Purple\", \"id\": 7 }, { \"label\": \"White\", \"id\": 8 }];\n\n    var dropdown1 = new Dropdown();\n    dropdown1.init(\"dropdown1\", DROPDOWN_DATA_1);\n\n    var dropdown2 = new Dropdown();\n    dropdown2.init(\"dropdown2\", DROPDOWN_DATA_2);\n};\n\n},{}]},{},[1]);\n"],"file":"script.js"}